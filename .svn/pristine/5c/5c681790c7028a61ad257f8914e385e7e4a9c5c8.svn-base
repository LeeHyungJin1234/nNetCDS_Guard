<%@ page language="java" contentType="text/html; charset=utf-8"	pageEncoding="utf-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>

<!DOCTYPE html>
<html lang="ko">
<head>
	<meta charset="UTF-8">
	<title><spring:message code='common.title'/></title>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="author" content="nNetCDS">

	<!-- Stylesheets -->
	<link rel="stylesheet" href="/css/DevExtreme/dx.generic.custom-swatch.css" />
	<link rel="stylesheet" href="/css/DevExtreme/dx.light_Custom.css" />
	<%@ include file="/WEB-INF/views/include/css/table_css.jsp"%>
	
	<!-- Scripts -->
	<script type="text/javascript" src="<c:url value="/js/polyfill.min.js"/>"></script>
	<script type="text/javascript" src="<c:url value="/js/DevExtreme/dx.all.js"/>"></script>
	
	<script>
		$(document).ready(function() {
			$.ajaxSetup({ cache: false });
			var ngl_group_name = "${ngl_group_name}";
			
			var groupListDataGrid = $('#groupListGrid').dxDataGrid({
				dataSource: new DevExpress.data.CustomStore({
					load: function(){
						return $.getJSON("/getGroupWhiteList.do").then(response => ({
                            data: response.data || [],
                            totalCount: response.totalCount || 0
                        })).fail(() => ({
                            data: [],
                            totalCount: 0
                        }));  
					}
				}),
				keyExpr: 'ngl_group_name',
			    showBorders: true,
			    showRowLines: true,
				showColumnLines: false,
			    width: '100%',
			    height: 700,
				sorting: {
					mode: 'multiple',
				},
			    filterRow: {
					visible: false,
			    },
			    headerFilter: {
					visible: true,
			    },
				grouping: {
					autoExpandAll: !ngl_group_name,
					expandMode: "rowClick"
				},
				groupPanel: {
					visible: false,
				},
				selection: {
					mode: 'multiple', 
					showCheckBoxesMode:'always',
					selectAllMode:'page',
					deferred: false, 
				},
			    scrolling: {
			        mode: 'virtual',
			    },
				noDataText: "No data",
				stateStoring: {
				    enabled: false,
				},
			    columns: [
				    { 
						dataField: 'ngl_group_name',
						caption: '그룹명',
						alignment: 'left',
						dataType: 'String',
						groupIndex: 0,
						groupCellTemplate: function(element, options) {
							const valueDiv = $("<div class='groupDiv'>").text(options.value);
							const ngl_id = options.data.items?.[0]?.ngl_id;
							
							if (ngl_id) {
								valueDiv.attr('id', "group-id-" + ngl_id);
							}
							
							const delBtn = $("<button id='deleteGroup' class='delGroupBtn'>")
	                        .text("그룹 삭제")
	                        .on('click', () => deleteGroup(options.value));
	                    	valueDiv.append(delBtn);
							
							return valueDiv;
		                },
				    }, 
				    {
						dataField: 'strWlId',
						caption: 'ID',
						dataType: 'String',
						alignment: 'center', 
						width: '8%',
						allowHeaderFiltering: false,
					}, 
					{
						dataField: 'strPsInOut',
						caption: '구분',
						alignment: 'center',
						dataType: 'String',
						width: '10%',
					}, 
					{
						caption: '출발지',
						alignment: 'center',
						columns: [
							{
								dataField: 'wl_src_ip',
								caption: 'IP',
								alignment: 'center',
								dataType: 'string',
								width: '20%',
								headerFilter: {
									search: {
										enabled: true,
									},
								},
							}, 
							{
								dataField: 'wl_src_port',
								caption: 'Port',
								alignment: 'center',
								dataType: 'string',
								width: '15%',
								headerFilter: {
									search: {
										enabled: true,
									},
								}, 
							}
						],
		  			}, 
		  			{
						caption: '목적지',
						alignment: 'center',
						columns: [
							{
								dataField: 'wl_dst_ip',
								caption: 'IP',
								alignment: 'center',
								dataType: 'string',
								width: '20%',
								headerFilter: {
									search: {
										enabled: true,
									},
								}, 
							}, 
							{
								dataField: 'wl_dst_port',
								caption: 'Port',
								alignment: 'center',
								dataType: 'string',
								width: '15%',
								headerFilter: {
									search: {
										enabled: true,
									},
								}, 
							}
						],
		  			}, 
		  			{
						dataField: 'wl_regdttm',
						caption: '등록일',
						alignment: 'center',
						dataType: 'date',
						format: 'yyyy-MM-dd HH:mm:ss',
						width: '12%',
						headerFilter: {
							search: {
								enabled: true,
							},
						},
					}
	  			],  
				onInitialized: function(e) {
		            if (ngl_group_name) {
		                expandGroupByName(ngl_group_name);
		            }
		        },
			}).dxDataGrid('instance');
		});
		
		function expandGroupByName(ngl_group_name) {
		    var groupListDataGrid = $('#groupListGrid').dxDataGrid('instance');
		    
		    groupListDataGrid.on("contentReady", function() {
			    groupListDataGrid.getDataSource().store().load().done(function(data) {
			        let groupFound = false;
			        for (let i = 0; i < data.data.length; i++) {
			        	if (data.data[i].ngl_group_name === ngl_group_name) {
		                    groupListDataGrid.expandRow([data.data[i].ngl_group_name]).done(function() {
		                    }).fail(function() {
		                        alert("Failed to expand group:", ngl_group_name);
		                    });
		                    groupFound = true;
		                    break;
		                }
			        }
		
			        if (!groupFound) {
			            alert("No matching group found for ngl_group_name:", ngl_group_name);
			        }
			    }).fail(function(error) {
			        alert("Error loading data:", error);
			    });
		    	
		        groupListDataGrid.off("contentReady");
		    });
		}
	
		function deleteGroup(groupName){
			if(confirm("그룹을 삭제하시면 등록된 정책들도 같이 삭제됩니다. 삭제 하시겠습니까?")) {
				$.ajax({
					url : "delete_group.do?groupName="+ groupName,
					traditional: true,	//ajax로 배열 넘기기 옵션
					contentType : "application/x-www-form-urlencoded; charset=UTF-8",
					success: function(data) {
						if(data.delGroupCnt > 0){
							alert(data.groupname+" 그룹과 "+ data.delWhiteListCnt+"개의 접근제어 정책이 삭제되었습니다.");						
							location.href="/white_ics.do";
						}
						else{
							alert(data);
						}
					},
					error: function(){
						alert('삭제 작업 중 에러가 발생하였습니다.');
					}
				});
			}
		}
		
	</script>
</head>
<body>
	<div class="groupListGrid">
     	<div id="groupListGrid"></div>
   	</div>
</body>
</html>